{"ast":null,"code":"var _jsxFileName = \"/Users/vyoma/Desktop/Desktop/webPage_frontend/ReactTutorial/ReactProjects/foodie/src/Modal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Modal = _ref => {\n  _s();\n  let {\n    ingredients\n  } = _ref;\n  //Using Inline Function and the The Logical Not (!) to toggle state\n  const [toggle, setToggle] = useState(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setToggle(!toggle),\n      className: \"btn btn-primary mb-5\",\n      children: \"Toggle State\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), toggle && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: ingredients.map(ing => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"ingItems\",\n        children: ing.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n_s(Modal, \"5vSfKVixOhdlHyVzf1hexG5pQnM=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","Modal","ingredients","toggle","setToggle","map","ing","text"],"sources":["/Users/vyoma/Desktop/Desktop/webPage_frontend/ReactTutorial/ReactProjects/foodie/src/Modal.js"],"sourcesContent":["import React, { useState } from 'react'\nconst Modal = ({ingredients}) => {\n\n    //Using Inline Function and the The Logical Not (!) to toggle state\n    const [toggle, setToggle] = useState(true)\n  \n    return (\n      <>\n        <button \n              onClick={() => setToggle(!toggle)} \n              className=\"btn btn-primary mb-5\">\n            Toggle State\n        </button>\n        {toggle && ( \n          <ul className=\"list-group\">\n            {ingredients.map(ing => (\n                  <li className='ingItems'>{ing.text}</li>\n              ))}\n            </ul>\n\n        )}\n      </>\n    )\n  }\n  export default Modal"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AACvC,MAAMC,KAAK,GAAG,QAAmB;EAAA;EAAA,IAAlB;IAACC;EAAW,CAAC;EAExB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAE1C,oBACE;IAAA,wBACE;MACM,OAAO,EAAE,MAAMI,SAAS,CAAC,CAACD,MAAM,CAAE;MAClC,SAAS,EAAC,sBAAsB;MAAA,UAAC;IAEvC;MAAA;MAAA;MAAA;IAAA,QAAS,EACRA,MAAM,iBACL;MAAI,SAAS,EAAC,YAAY;MAAA,UACvBD,WAAW,CAACG,GAAG,CAACC,GAAG,iBACd;QAAI,SAAS,EAAC,UAAU;QAAA,UAAEA,GAAG,CAACC;MAAI;QAAA;QAAA;QAAA;MAAA,QACrC;IAAC;MAAA;MAAA;MAAA;IAAA,QAGP;EAAA,gBACA;AAEP,CAAC;AAAA,GAtBGN,KAAK;AAAA,KAALA,KAAK;AAuBT,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}